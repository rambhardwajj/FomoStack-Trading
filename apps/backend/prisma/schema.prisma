// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  username     String        @unique
  email        String        @unique
  passwordHash String
  balance      Int         @default(5000)
  picture      String? // URL to profile picture
  orders       Order[] // Relation to Orders
  transactions Transaction[] // For deposits/withdrawals
  positions    Position[] // Relation to Positions

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  symbol    String
  orderType String
  quantity  Int?
  price     Int?
  leverage  Int?
  margin    Int?

  status String // OPEN, FILLED, PARTIALLY_FILLED, CANCELLED, CLOSED

  pnl      Int? // Profit & Loss
  openingPrice Int?
  closingPrice Int?

  closedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Position {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  symbol     String
  quantity   Int?
  entryPrice Int
  leverage   Int?

  status   String // OPEN, CLOSED
  pnl      Int? // Profit & Loss
  closedAt DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  type   String // DEPOSIT, WITHDRAWAL
  amount Int
  status String // PENDING, COMPLETED, FAILED

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
